version: '3.8'

services:
  # API Gateway Service
  api-gateway:
    build:
      context: ./src/api-gateway
      dockerfile: Dockerfile
    ports:
      - "8000:8000"
    environment:
      - LOG_LEVEL=debug
      - SECRET_KEY=${SECRET_KEY:-a-secure-secret-key-that-should-be-replaced-in-production}
      - ALLOW_ORIGINS=http://localhost:3000,http://localhost:8080
      - DATABASE_URL=postgresql://postgres:postgres@postgres:5432/crohns_treatment
      - HMS_A2A_URL=http://a2a-service:8001
      - HMS_AGX_URL=http://agx-service:8002
      - HMS_EHR_URL=http://ehr-service:8003
    depends_on:
      - postgres
      - redis
      - a2a-service
      - agx-service
      - ehr-service
    volumes:
      - ./src/api-gateway:/app
    networks:
      - crohns-network

  # HMS-A2A Agent Coordination Service
  a2a-service:
    build:
      context: ./src/coordination/a2a-integration
      dockerfile: Dockerfile
    ports:
      - "8001:8001"
    environment:
      - LOG_LEVEL=debug
      - GENETIC_ENGINE_MOCK=${GENETIC_ENGINE_MOCK:-true}
      - KAFKA_BOOTSTRAP_SERVERS=kafka:9092
      - REDIS_URL=redis://redis:6379/0
    volumes:
      - ./src/coordination/a2a-integration:/app
    networks:
      - crohns-network

  # HMS-AGX Research Service
  agx-service:
    build:
      context: ./src/research/agx-integration
      dockerfile: Dockerfile
    ports:
      - "8002:8002"
    environment:
      - LOG_LEVEL=debug
      - AGX_API_KEY=${AGX_API_KEY:-test_key}
      - AGX_BASE_URL=${AGX_BASE_URL:-http://localhost:8000/api/v1}
      - KAFKA_BOOTSTRAP_SERVERS=kafka:9092
    volumes:
      - ./src/research/agx-integration:/app
    networks:
      - crohns-network

  # HMS-EHR Integration Service
  ehr-service:
    build:
      context: ./src/data-layer/ehr-integration
      dockerfile: Dockerfile
    ports:
      - "8003:8003"
    environment:
      - LOG_LEVEL=debug
      - FHIR_BASE_URL=${FHIR_BASE_URL:-http://localhost:8000/fhir}
      - DATABASE_URL=postgresql://postgres:postgres@postgres:5432/crohns_treatment
      - KAFKA_BOOTSTRAP_SERVERS=kafka:9092
    volumes:
      - ./src/data-layer/ehr-integration:/app
    depends_on:
      - postgres
    networks:
      - crohns-network

  # Web UI (Patient Portal)
  patient-portal:
    build:
      context: ./src/ui/patient-portal
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=development
      - API_URL=http://localhost:8000
    volumes:
      - ./src/ui/patient-portal:/app
    networks:
      - crohns-network

  # Web UI (Researcher Dashboard)
  researcher-dashboard:
    build:
      context: ./src/ui/researcher-dashboard
      dockerfile: Dockerfile
    ports:
      - "3001:3000"
    environment:
      - NODE_ENV=development
      - API_URL=http://localhost:8000
    volumes:
      - ./src/ui/researcher-dashboard:/app
    networks:
      - crohns-network

  # PostgreSQL Database
  postgres:
    image: postgres:15
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=crohns_treatment
    volumes:
      - postgres-data:/var/lib/postgresql/data
      - ./infrastructure/postgres/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - crohns-network

  # Redis for Caching
  redis:
    image: redis:7
    ports:
      - "6379:6379"
    networks:
      - crohns-network

  # Kafka for Event Bus
  kafka:
    image: bitnami/kafka:3.5
    ports:
      - "9092:9092"
    environment:
      - KAFKA_CFG_NODE_ID=0
      - KAFKA_CFG_PROCESS_ROLES=controller,broker
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=0@kafka:9093
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:9093
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
      - KAFKA_CFG_AUTO_CREATE_TOPICS_ENABLE=true
    volumes:
      - kafka-data:/bitnami/kafka
    networks:
      - crohns-network

  # Kafka UI for monitoring Kafka
  kafka-ui:
    image: provectuslabs/kafka-ui:latest
    ports:
      - "8080:8080"
    environment:
      - KAFKA_CLUSTERS_0_NAME=crohns-kafka
      - KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS=kafka:9092
    depends_on:
      - kafka
    networks:
      - crohns-network

  # Prometheus for Monitoring
  prometheus:
    image: prom/prometheus:v2.46.0
    ports:
      - "9090:9090"
    volumes:
      - ./infrastructure/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus-data:/prometheus
    networks:
      - crohns-network

  # Grafana for Visualization
  grafana:
    image: grafana/grafana:10.0.3
    ports:
      - "3002:3000"
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
    volumes:
      - ./infrastructure/grafana/provisioning:/etc/grafana/provisioning
      - grafana-data:/var/lib/grafana
    depends_on:
      - prometheus
    networks:
      - crohns-network

volumes:
  postgres-data:
  kafka-data:
  prometheus-data:
  grafana-data:

networks:
  crohns-network:
    driver: bridge