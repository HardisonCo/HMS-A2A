name: Code Quality

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  lint-python:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
          cache: 'pip'
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install flake8 black isort mypy
          if [ -f requirements-dev.txt ]; then pip install -r requirements-dev.txt; fi
      - name: Lint with flake8
        run: |
          flake8 foundation implementations tests --count --select=E9,F63,F7,F82 --show-source --statistics
      - name: Check formatting with black
        run: |
          black --check foundation implementations tests
      - name: Check imports with isort
        run: |
          isort --check-only --profile black foundation implementations tests
      - name: Type check with mypy
        run: |
          mypy foundation implementations tests

  lint-javascript:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'npm'
          cache-dependency-path: 'foundation/utilities/package.json'
      - name: Install dependencies
        run: |
          cd foundation/utilities
          npm ci
      - name: Lint JavaScript
        run: |
          cd foundation/utilities
          npx eslint .

  lint-rust:
    runs-on: ubuntu-latest
    needs: []
    if: hashFiles('**/*.rs') != ''
    steps:
      - uses: actions/checkout@v3
      - name: Set up Rust
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          components: clippy, rustfmt
      - name: Check formatting
        uses: actions-rs/cargo@v1
        with:
          command: fmt
          args: --all -- --check
      - name: Clippy
        uses: actions-rs/cargo@v1
        with:
          command: clippy
          args: -- -D warnings